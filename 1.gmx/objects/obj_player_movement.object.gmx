<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Attacking = false
global.Subimage = 0 
Speed = 2 
global.Direction = "Down"
Player_x = xstart
Player_y = ystart
scr_get_input()
state = scr_move_state

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement down

/*right_key = keyboard_check(vk_right)
left_key = keyboard_check(vk_left)
up_key = keyboard_check(vk_up)
down_key = keyboard_check(vk_down)*/
/*scr_move_state()*/

script_execute(state)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking movement
if (Attacking = false)
    { if (mouse_check_button_pressed(mb_left))
        { if (global.Direction = "Down")
            { sprite_index = spr_player_attack_down
              image_speed = 0.4
              image_index = 0
              Attacking = true
            }
          if (global.Direction = "Up")
            { sprite_index = spr_player_attack_up
              image_speed = 0.4
              image_index = 0
              Attacking = true
            }
          if (global.Direction = "Left")
            { sprite_index = spr_player_attack_left
              image_speed = 0.4
              image_index = 0
              Attacking = true
            }
          if (global.Direction = "Right")
            { sprite_index = spr_player_attack_right
              image_speed = 0.4
              image_index = 0
              Attacking = true
            }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_find_depth</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_warp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
Player_x = other.Player_x
Player_y = other.Player_y
room_goto(other.Warp_Room)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index = spr_player_attack_left) or (sprite_index = spr_player_attack_right) or  (sprite_index = spr_player_attack_up) or (sprite_index = spr_player_attack_down) 
   { Attacking = false
   }
   
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = Player_x
y = Player_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Player_x = xstart
Player_y = ystart

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Skin
if (global.Skin = 0)
    { if (global.Direction = "Down")
        { draw_sprite(spr_skin_1_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_skin_1_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_skin_1_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_skin_1_walk_left,image_index,x,y)
        }
        
    }
if (global.Skin = 1)
    { if (global.Direction = "Down")
        { draw_sprite(spr_skin_2_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_skin_2_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_skin_2_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_skin_2_walk_left,image_index,x,y)
        }
    }
if (global.Skin = 2)
    { if (global.Direction = "Down")
        { draw_sprite(spr_skin_3_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_skin_3_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_skin_3_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_skin_3_walk_left,image_index,x,y)
        }
    }   
//Body
if (global.Body = 0)
    { if (global.Direction = "Down")
        { draw_sprite(spr_body_1_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_body_1_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_body_1_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_body_1_walk_left,image_index,x,y)
        }
    }
if (global.Body = 1)
    { if (global.Direction = "Down")
        { draw_sprite(spr_body_2_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_body_2_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_body_2_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_body_2_walk_left,image_index,x,y)
        }
    }
if (global.Body = 2)
    { if (global.Direction = "Down")
        { draw_sprite(spr_body_3_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_body_3_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_body_3_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_body_3_walk_left,image_index,x,y)
        }
    } 
//Hair
if (global.Hair = 0)
    { if (global.Direction = "Down")
        { draw_sprite(spr_hair_1_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_hair_1_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_hair_1_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_hair_1_walk_left,image_index,x,y)
        }
    }
if (global.Hair = 1)
    {  if (global.Direction = "Down")
        { draw_sprite(spr_hair_2_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_hair_2_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_hair_2_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_hair_2_walk_left,image_index,x,y)
        }
   }
if (global.Hair = 2)
    {  if (global.Direction = "Down")
        { draw_sprite(spr_hair_3_walk_down,image_index,x,y)
        }
      if (global.Direction = "Up")
        { draw_sprite(spr_hair_3_walk_up,image_index,x,y)
        }
      if (global.Direction = "Right")
        { draw_sprite(spr_hair_3_walk_right,image_index,x,y)
        }
      if (global.Direction = "Left")
        { draw_sprite(spr_hair_3_walk_left,image_index,x,y)
        } 
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
